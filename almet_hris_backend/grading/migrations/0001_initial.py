# Generated by Django 5.2.1 on 2025-06-10 08:18

import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0002_alter_employee_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('base_currency', models.CharField(default='AZN', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grading System',
                'verbose_name_plural': 'Grading Systems',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GrowthRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vertical_rate', models.DecimalField(decimal_places=4, help_text='Vertical growth rate as percentage', max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vertical_growth_from', to='api.positiongroup')),
                ('grading_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='growth_rates', to='grading.gradingsystem')),
                ('to_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vertical_growth_to', to='api.positiongroup')),
            ],
            options={
                'ordering': ['from_position__hierarchy_level'],
            },
        ),
        migrations.CreateModel(
            name='HorizontalRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition_type', models.CharField(choices=[('LD_TO_LQ', 'LD to LQ'), ('LQ_TO_M', 'LQ to Median'), ('M_TO_UQ', 'Median to UQ'), ('UQ_TO_UD', 'UQ to UD')], db_index=True, max_length=10)),
                ('horizontal_rate', models.DecimalField(decimal_places=4, help_text='Horizontal growth rate as percentage', max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grading_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horizontal_rates', to='grading.gradingsystem')),
                ('position_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horizontal_rates', to='api.positiongroup')),
            ],
            options={
                'ordering': ['position_group__hierarchy_level', 'transition_type'],
            },
        ),
        migrations.CreateModel(
            name='SalaryGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lower_decile', models.DecimalField(decimal_places=2, help_text='LD - Lower Decile', max_digits=15)),
                ('lower_quartile', models.DecimalField(decimal_places=2, help_text='LQ - Lower Quartile', max_digits=15)),
                ('median', models.DecimalField(decimal_places=2, help_text='M - Median', max_digits=15)),
                ('upper_quartile', models.DecimalField(decimal_places=2, help_text='UQ - Upper Quartile', max_digits=15)),
                ('upper_decile', models.DecimalField(decimal_places=2, help_text='UD - Upper Decile', max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grading_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_grades', to='grading.gradingsystem')),
                ('position_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_grades', to='api.positiongroup')),
            ],
            options={
                'ordering': ['position_group__hierarchy_level'],
            },
        ),
        migrations.CreateModel(
            name='SalaryScenario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('CURRENT', 'Current'), ('ARCHIVED', 'Archived')], db_index=True, default='DRAFT', max_length=10)),
                ('base_value', models.DecimalField(decimal_places=2, help_text='Base minimum value', max_digits=15)),
                ('custom_vertical_rates', models.JSONField(default=dict, help_text='Custom vertical rates: {from_pos_id: rate}')),
                ('custom_horizontal_rates', models.JSONField(default=dict, help_text='Custom horizontal rates: {pos_id: {transition: rate}}')),
                ('calculated_grades', models.JSONField(default=dict, help_text='Calculated salary grades')),
                ('calculation_timestamp', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applied_at', models.DateTimeField(blank=True, null=True)),
                ('applied_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_scenarios', to=settings.AUTH_USER_MODEL)),
                ('base_position', models.ForeignKey(help_text='Starting position (lowest)', on_delete=django.db.models.deletion.CASCADE, to='api.positiongroup')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('grading_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to='grading.gradingsystem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScenarioHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(db_index=True, max_length=30)),
                ('changes_made', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('previous_current_scenario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='grading.salaryscenario')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='grading.salaryscenario')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='gradingsystem',
            index=models.Index(fields=['is_active', 'created_at'], name='grading_gra_is_acti_6445be_idx'),
        ),
        migrations.AddIndex(
            model_name='growthrate',
            index=models.Index(fields=['grading_system', 'from_position'], name='grading_gro_grading_2a4d35_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='growthrate',
            unique_together={('grading_system', 'from_position', 'to_position')},
        ),
        migrations.AddIndex(
            model_name='horizontalrate',
            index=models.Index(fields=['grading_system', 'position_group', 'transition_type'], name='grading_hor_grading_30a8ad_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='horizontalrate',
            unique_together={('grading_system', 'position_group', 'transition_type')},
        ),
        migrations.AddIndex(
            model_name='salarygrade',
            index=models.Index(fields=['grading_system', 'position_group'], name='grading_sal_grading_2f55a6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='salarygrade',
            unique_together={('grading_system', 'position_group')},
        ),
        migrations.AddIndex(
            model_name='salaryscenario',
            index=models.Index(fields=['grading_system', 'status'], name='grading_sal_grading_69c637_idx'),
        ),
        migrations.AddIndex(
            model_name='salaryscenario',
            index=models.Index(fields=['status', 'created_at'], name='grading_sal_status_a7d1c3_idx'),
        ),
        migrations.AddIndex(
            model_name='salaryscenario',
            index=django.contrib.postgres.indexes.GinIndex(fields=['calculated_grades'], name='grading_sal_calcula_80b09d_gin'),
        ),
        migrations.AddIndex(
            model_name='salaryscenario',
            index=django.contrib.postgres.indexes.GinIndex(fields=['custom_vertical_rates'], name='grading_sal_custom__8ab43d_gin'),
        ),
        migrations.AddIndex(
            model_name='salaryscenario',
            index=django.contrib.postgres.indexes.GinIndex(fields=['custom_horizontal_rates'], name='grading_sal_custom__b9cc23_gin'),
        ),
        migrations.AddIndex(
            model_name='scenariohistory',
            index=models.Index(fields=['scenario', 'timestamp'], name='grading_sce_scenari_9db606_idx'),
        ),
        migrations.AddIndex(
            model_name='scenariohistory',
            index=models.Index(fields=['action', 'timestamp'], name='grading_sce_action_0df7ba_idx'),
        ),
        migrations.AddIndex(
            model_name='scenariohistory',
            index=django.contrib.postgres.indexes.GinIndex(fields=['changes_made'], name='grading_sce_changes_71709a_gin'),
        ),
    ]
