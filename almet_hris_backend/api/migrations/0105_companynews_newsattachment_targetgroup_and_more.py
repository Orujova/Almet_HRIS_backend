# Generated by Django 5.2.1 on 2025-10-20 08:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0104_alter_positionbehavioralassessment_unique_together_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyNews',
            fields=[
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='News title/headline', max_length=300)),
                ('excerpt', models.TextField(help_text='Brief summary (shown in list view)', max_length=500)),
                ('content', models.TextField(help_text='Full news content (supports rich text)')),
                ('category', models.CharField(choices=[('announcement', 'Announcement'), ('event', 'Event'), ('achievement', 'Achievement'), ('update', 'Update'), ('policy', 'Policy'), ('celebration', 'Celebration'), ('urgent', 'Urgent')], db_index=True, default='announcement', help_text='News category', max_length=20)),
                ('tags', models.CharField(blank=True, help_text="Comma-separated tags (e.g., 'HR, Benefits, 2025')", max_length=500)),
                ('image', models.ImageField(blank=True, help_text='Featured image for the news', null=True, upload_to='news_images/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif', 'webp'])])),
                ('image_preview_url', models.URLField(blank=True, help_text='External image URL (alternative to uploaded image)', max_length=500)),
                ('notify_members', models.BooleanField(default=False, help_text='Send email notification to target group members')),
                ('is_published', models.BooleanField(db_index=True, default=True, help_text='Published news are visible to users')),
                ('is_pinned', models.BooleanField(db_index=True, default=False, help_text='Pinned news appear at the top')),
                ('published_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Publication date/time')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times news was viewed')),
                ('author_display_name', models.CharField(blank=True, help_text="Display name for author (e.g., 'CEO Office', 'HR Department')", max_length=200)),
                ('notification_sent', models.BooleanField(default=False, help_text='Whether notification emails were sent')),
                ('notification_sent_at', models.DateTimeField(blank=True, help_text='When notifications were sent', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='News author', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_authored', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company News',
                'verbose_name_plural': 'Company News',
                'db_table': 'company_news',
                'ordering': ['-is_pinned', '-published_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(help_text='Attachment file', upload_to='news_attachments/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'zip'])])),
                ('filename', models.CharField(help_text='Original filename', max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='api.companynews')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'News Attachment',
                'verbose_name_plural': 'News Attachments',
                'db_table': 'company_news_attachments',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='TargetGroup',
            fields=[
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Target group name (e.g., 'Leadership Team', 'All Employees')", max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this target group')),
                ('is_active', models.BooleanField(default=True, help_text='Active groups can be used for news distribution')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_target_groups_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, help_text='Employees in this target group', related_name='news_target_groups', to='api.employee')),
            ],
            options={
                'verbose_name': 'Target Group',
                'verbose_name_plural': 'Target Groups',
                'db_table': 'company_target_groups',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='companynews',
            name='target_groups',
            field=models.ManyToManyField(blank=True, help_text='Target groups to receive this news', related_name='news_items', to='api.targetgroup'),
        ),
        migrations.CreateModel(
            name='NewsActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('CREATED', 'News Created'), ('UPDATED', 'News Updated'), ('PUBLISHED', 'News Published'), ('UNPUBLISHED', 'News Unpublished'), ('PINNED', 'News Pinned'), ('UNPINNED', 'News Unpinned'), ('NOTIFICATION_SENT', 'Notification Sent'), ('DELETED', 'News Deleted'), ('VIEWED', 'News Viewed')], max_length=30)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.companynews')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'News Activity',
                'verbose_name_plural': 'News Activities',
                'db_table': 'company_news_activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['news', '-created_at'], name='company_new_news_id_c45179_idx'), models.Index(fields=['activity_type'], name='company_new_activit_761182_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='targetgroup',
            index=models.Index(fields=['name'], name='company_tar_name_c5ea10_idx'),
        ),
        migrations.AddIndex(
            model_name='targetgroup',
            index=models.Index(fields=['is_active'], name='company_tar_is_acti_ab61a8_idx'),
        ),
        migrations.AddIndex(
            model_name='targetgroup',
            index=models.Index(fields=['is_deleted'], name='company_tar_is_dele_56c2ab_idx'),
        ),
        migrations.AddIndex(
            model_name='companynews',
            index=models.Index(fields=['-is_pinned', '-published_at'], name='company_new_is_pinn_c4b5a5_idx'),
        ),
        migrations.AddIndex(
            model_name='companynews',
            index=models.Index(fields=['category', '-published_at'], name='company_new_categor_f9814f_idx'),
        ),
        migrations.AddIndex(
            model_name='companynews',
            index=models.Index(fields=['is_published', '-published_at'], name='company_new_is_publ_5d7af7_idx'),
        ),
        migrations.AddIndex(
            model_name='companynews',
            index=models.Index(fields=['is_deleted'], name='company_new_is_dele_8471f8_idx'),
        ),
    ]
