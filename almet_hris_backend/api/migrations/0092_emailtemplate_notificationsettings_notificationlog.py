# Generated by Django 5.2.1 on 2025-10-08 20:42

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0091_remove_businesstriprequest_current_step_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_type', models.CharField(choices=[('BUSINESS_TRIP_CREATED', 'Business Trip - Request Created'), ('BUSINESS_TRIP_LM_APPROVED', 'Business Trip - Line Manager Approved'), ('BUSINESS_TRIP_FINANCE_APPROVED', 'Business Trip - Finance Approved'), ('BUSINESS_TRIP_HR_APPROVED', 'Business Trip - HR Approved (Final)'), ('BUSINESS_TRIP_REJECTED', 'Business Trip - Rejected'), ('BUSINESS_TRIP_CANCELLED', 'Business Trip - Cancelled'), ('VACATION_CREATED', 'Vacation - Request Created'), ('VACATION_APPROVED', 'Vacation - Approved'), ('VACATION_REJECTED', 'Vacation - Rejected'), ('GENERAL', 'General Notification'), ('SYSTEM_ALERT', 'System Alert')], help_text='Unique template type identifier', max_length=50, unique=True)),
                ('subject', models.CharField(help_text='Email subject line (supports variables like {request_id})', max_length=255)),
                ('body_html', models.TextField(help_text='HTML email body with placeholders (e.g., {employee_name}, {request_id})')),
                ('body_text', models.TextField(blank=True, help_text="Plain text email body (optional, for email clients that don't support HTML)")),
                ('available_variables', models.TextField(blank=True, help_text='Available variables for this template (e.g., {employee_name}, {request_id}, {start_date})')),
                ('is_active', models.BooleanField(default=True, help_text='Active templates are available for use')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_templates_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'db_table': 'email_templates',
                'ordering': ['template_type'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('microsoft_client_id', models.CharField(blank=True, help_text='Microsoft Azure App Client ID (optional, uses settings.MICROSOFT_CLIENT_ID)', max_length=255)),
                ('microsoft_tenant_id', models.CharField(blank=True, help_text='Microsoft Azure Tenant ID (optional, uses settings.MICROSOFT_TENANT_ID)', max_length=255)),
                ('default_sender_email', models.EmailField(default='noreply@almettrading.com', help_text='Default sender email address for system notifications', max_length=254)),
                ('default_sender_name', models.CharField(default='Almet HRIS System', help_text='Default sender display name', max_length=255)),
                ('enable_email_notifications', models.BooleanField(default=True, help_text='Master switch to enable/disable all email notifications')),
                ('email_retry_attempts', models.IntegerField(default=3, help_text='Number of retry attempts for failed email deliveries')),
                ('email_retry_delay_minutes', models.IntegerField(default=5, help_text='Delay in minutes between retry attempts')),
                ('business_trip_subject_prefix', models.CharField(default='[BUSINESS TRIP]', help_text='Subject prefix for business trip emails (used for filtering in Outlook)', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Only one settings record should be active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_settings_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_settings_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Settings',
                'verbose_name_plural': 'Notification Settings',
                'db_table': 'notification_settings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification')], db_index=True, default='EMAIL', max_length=20)),
                ('recipient_email', models.EmailField(db_index=True, help_text="Recipient's email address", max_length=254)),
                ('recipient_name', models.CharField(blank=True, help_text="Recipient's display name", max_length=255)),
                ('subject', models.CharField(help_text='Email subject line', max_length=500)),
                ('body', models.TextField(help_text='Email body (HTML or plain text)')),
                ('related_model', models.CharField(blank=True, db_index=True, help_text="Related model name (e.g., 'BusinessTripRequest', 'VacationRequest')", max_length=100)),
                ('related_object_id', models.CharField(blank=True, db_index=True, help_text='Related object ID for tracking', max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent Successfully'), ('FAILED', 'Failed'), ('RETRY', 'Retry Scheduled')], db_index=True, default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True, help_text='Error message if delivery failed')),
                ('retry_count', models.IntegerField(default=0, help_text='Number of delivery retry attempts')),
                ('message_id', models.CharField(blank=True, help_text='Microsoft Graph message ID (for tracking in Exchange)', max_length=255)),
                ('sent_at', models.DateTimeField(blank=True, help_text='Timestamp when email was successfully sent', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When the notification was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('sent_by', models.ForeignKey(blank=True, help_text='User who triggered this notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='notificatio_created_f8e81a_idx'), models.Index(fields=['status', '-created_at'], name='notificatio_status_aafbae_idx'), models.Index(fields=['recipient_email', '-created_at'], name='notificatio_recipie_8713e4_idx'), models.Index(fields=['related_model', 'related_object_id'], name='notificatio_related_41343d_idx'), models.Index(fields=['notification_type', 'status'], name='notificatio_notific_250714_idx')],
            },
        ),
    ]
