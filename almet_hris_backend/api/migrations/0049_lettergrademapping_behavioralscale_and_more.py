# Generated by Django 5.2.1 on 2025-09-01 06:53

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0048_remove_employee_clarification_provided_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LetterGradeMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter_grade', models.CharField(max_length=10, unique=True)),
                ('min_percentage', models.IntegerField(help_text='Minimum percentage for this grade')),
                ('max_percentage', models.IntegerField(help_text='Maximum percentage for this grade')),
                ('color', models.CharField(default='#6B7280', help_text='Display color', max_length=7)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'competency_letter_grades',
                'ordering': ['-min_percentage'],
            },
        ),
        migrations.CreateModel(
            name='BehavioralScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(help_text='Behavioral scale description')),
                ('scale_definitions', models.JSONField(default=dict, help_text='Scale definitions with behavioral descriptions')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'competency_behavioral_scales',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CoreCompetencyScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(help_text='Description of this scale')),
                ('min_value', models.IntegerField(default=0, help_text='Minimum scale value')),
                ('max_value', models.IntegerField(default=5, help_text='Maximum scale value')),
                ('scale_levels', models.JSONField(default=dict, help_text='Scale levels definition: {level: description}')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'competency_core_scales',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PositionBehavioralAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('behavioral_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.behavioralscale')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('position_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.positiongroup')),
            ],
            options={
                'db_table': 'position_behavioral_assessments',
                'unique_together': {('position_group', 'job_title')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeBehavioralAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('APPROVED', 'Approved')], default='DRAFT', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('group_scores', models.JSONField(default=dict, help_text='Scores by competency group: {group_name: {position_total, employee_total, percentage, letter_grade}}')),
                ('overall_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overall_letter_grade', models.CharField(default='N/A', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_assessments', to='api.employee')),
                ('position_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.positionbehavioralassessment')),
            ],
            options={
                'db_table': 'employee_behavioral_assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PositionCoreAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('position_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.positiongroup')),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.corecompetencyscale')),
            ],
            options={
                'db_table': 'position_core_assessments',
                'unique_together': {('position_group', 'job_title')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeCoreAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('APPROVED', 'Approved')], default='DRAFT', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('total_position_score', models.IntegerField(default=0, help_text='Total required score for position')),
                ('total_employee_score', models.IntegerField(default=0, help_text='Total employee actual score')),
                ('gap_score', models.IntegerField(default=0, help_text='Gap between required and actual')),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_assessments', to='api.employee')),
                ('position_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.positioncoreassessment')),
            ],
            options={
                'db_table': 'employee_core_assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeBehavioralCompetencyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('actual_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_ratings', to='api.employeebehavioralassessment')),
                ('behavioral_competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.behavioralcompetency')),
            ],
            options={
                'db_table': 'employee_behavioral_ratings',
                'unique_together': {('assessment', 'behavioral_competency')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeCoreCompetencyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('actual_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('gap', models.IntegerField(default=0, help_text='Actual - Required')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_ratings', to='api.employeecoreassessment')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.skill')),
            ],
            options={
                'db_table': 'employee_core_ratings',
                'unique_together': {('assessment', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='PositionBehavioralCompetencyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_level', models.IntegerField(help_text='Required behavioral competency level', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('behavioral_competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.behavioralcompetency')),
                ('position_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_ratings', to='api.positionbehavioralassessment')),
            ],
            options={
                'db_table': 'position_behavioral_ratings',
                'unique_together': {('position_assessment', 'behavioral_competency')},
            },
        ),
        migrations.CreateModel(
            name='PositionCoreCompetencyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_level', models.IntegerField(help_text='Required proficiency level for this position', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('position_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_ratings', to='api.positioncoreassessment')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.skill')),
            ],
            options={
                'db_table': 'position_core_ratings',
                'unique_together': {('position_assessment', 'skill')},
            },
        ),
    ]
