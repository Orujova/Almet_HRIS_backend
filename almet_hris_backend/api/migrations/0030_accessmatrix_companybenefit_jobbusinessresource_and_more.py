# Generated by Django 5.2.1 on 2025-08-11 22:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0029_remove_behavioralcompetency_description_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('access_level', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Access Matrix',
                'db_table': 'access_matrix',
                'ordering': ['access_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('benefit_type', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company_benefits',
                'ordering': ['benefit_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='JobBusinessResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'job_business_resources',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='JobDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=200, verbose_name='Job Title')),
                ('grading_level', models.CharField(help_text='Grading level from position group', max_length=10)),
                ('manual_employee_name', models.CharField(blank=True, max_length=200, verbose_name='Employee Name (Manual)')),
                ('manual_employee_phone', models.CharField(blank=True, max_length=50, verbose_name='Employee Phone (Manual)')),
                ('job_purpose', models.TextField(help_text='Main purpose and objectives of the role', validators=[django.core.validators.MinLengthValidator(50)])),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_LINE_MANAGER', 'Pending Line Manager Approval'), ('PENDING_EMPLOYEE', 'Pending Employee Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('REVISION_REQUIRED', 'Revision Required')], default='DRAFT', max_length=25)),
                ('line_manager_approved_at', models.DateTimeField(blank=True, null=True)),
                ('line_manager_comments', models.TextField(blank=True)),
                ('employee_approved_at', models.DateTimeField(blank=True, null=True)),
                ('employee_comments', models.TextField(blank=True)),
                ('line_manager_signature', models.FileField(blank=True, null=True, upload_to='job_descriptions/signatures/line_managers/')),
                ('employee_signature', models.FileField(blank=True, null=True, upload_to='job_descriptions/signatures/employees/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_job_descriptions', to='api.employee', verbose_name='Assigned Employee')),
                ('business_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.businessfunction', verbose_name='Business Function')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_job_descriptions', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.department', verbose_name='Department')),
                ('employee_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_approved_job_descriptions', to=settings.AUTH_USER_MODEL)),
                ('line_manager_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='line_manager_approved_job_descriptions', to=settings.AUTH_USER_MODEL)),
                ('position_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.positiongroup', verbose_name='Position Group/Hierarchy')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinate_job_descriptions', to='api.employee', verbose_name='Reports To (Manager)')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.unit', verbose_name='Unit')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_job_descriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Description',
                'verbose_name_plural': 'Job Descriptions',
                'db_table': 'job_descriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionAccessMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.accessmatrix')),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_rights', to='api.jobdescription')),
            ],
            options={
                'db_table': 'job_description_access_matrix',
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('CREATED', 'Created'), ('UPDATED', 'Updated'), ('SUBMITTED_FOR_APPROVAL', 'Submitted for Approval'), ('APPROVED_BY_LINE_MANAGER', 'Approved by Line Manager'), ('APPROVED_BY_EMPLOYEE', 'Approved by Employee'), ('REJECTED', 'Rejected'), ('REVISION_REQUESTED', 'Revision Requested'), ('RESUBMITTED', 'Resubmitted')], max_length=30)),
                ('description', models.TextField()),
                ('performed_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.jobdescription')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'job_description_activities',
                'ordering': ['-performed_at'],
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionBehavioralCompetency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('BASIC', 'Basic'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('EXPERT', 'Expert')], default='INTERMEDIATE', max_length=15)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('competency', models.ForeignKey(help_text='Competency from competency system', on_delete=django.db.models.deletion.CASCADE, to='api.behavioralcompetency')),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_competencies', to='api.jobdescription')),
            ],
            options={
                'db_table': 'job_description_behavioral_competencies',
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionBusinessResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_resources', to='api.jobdescription')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.jobbusinessresource')),
            ],
            options={
                'db_table': 'job_description_business_resources',
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionCompanyBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benefit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.companybenefit')),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_benefits', to='api.jobdescription')),
            ],
            options={
                'db_table': 'job_description_company_benefits',
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('CRITICAL_DUTIES', 'Critical Duties'), ('MAIN_KPIS', 'Main KPIs'), ('JOB_DUTIES', 'Job Duties'), ('REQUIREMENTS', 'Requirements'), ('CUSTOM', 'Custom Section')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='api.jobdescription')),
            ],
            options={
                'db_table': 'job_description_sections',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='JobDescriptionSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('BASIC', 'Basic'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('EXPERT', 'Expert')], default='INTERMEDIATE', max_length=15)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('job_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_skills', to='api.jobdescription')),
                ('skill', models.ForeignKey(help_text='Skill from competency system', on_delete=django.db.models.deletion.CASCADE, to='api.skill')),
            ],
            options={
                'db_table': 'job_description_skills',
            },
        ),
        migrations.AddIndex(
            model_name='jobdescription',
            index=models.Index(fields=['job_title'], name='job_descrip_job_tit_1d02ec_idx'),
        ),
        migrations.AddIndex(
            model_name='jobdescription',
            index=models.Index(fields=['status'], name='job_descrip_status_7b0350_idx'),
        ),
        migrations.AddIndex(
            model_name='jobdescription',
            index=models.Index(fields=['business_function', 'department'], name='job_descrip_busines_0e1b7a_idx'),
        ),
        migrations.AddIndex(
            model_name='jobdescription',
            index=models.Index(fields=['created_at'], name='job_descrip_created_a5d3de_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='jobdescriptionaccessmatrix',
            unique_together={('job_description', 'access_matrix')},
        ),
        migrations.AlterUniqueTogether(
            name='jobdescriptionbehavioralcompetency',
            unique_together={('job_description', 'competency')},
        ),
        migrations.AlterUniqueTogether(
            name='jobdescriptionbusinessresource',
            unique_together={('job_description', 'resource')},
        ),
        migrations.AlterUniqueTogether(
            name='jobdescriptioncompanybenefit',
            unique_together={('job_description', 'benefit')},
        ),
        migrations.AlterUniqueTogether(
            name='jobdescriptionsection',
            unique_together={('job_description', 'section_type', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='jobdescriptionskill',
            unique_together={('job_description', 'skill')},
        ),
    ]
